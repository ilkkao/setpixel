import { setPixel } from './layers';

// Font source: http://kofler.dot.at/c64/download/c64_upper.zip
const systemFont = [
  [ 0x3C, 0x66, 0x6E, 0x6E, 0x60, 0x62, 0x3C, 0x00 ],
  [ 0x18, 0x3C, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00 ],
  [ 0x7C, 0x66, 0x66, 0x7C, 0x66, 0x66, 0x7C, 0x00 ],
  [ 0x3C, 0x66, 0x60, 0x60, 0x60, 0x66, 0x3C, 0x00 ],
  [ 0x78, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0x78, 0x00 ],
  [ 0x7E, 0x60, 0x60, 0x78, 0x60, 0x60, 0x7E, 0x00 ],
  [ 0x7E, 0x60, 0x60, 0x78, 0x60, 0x60, 0x60, 0x00 ],
  [ 0x3C, 0x66, 0x60, 0x6E, 0x66, 0x66, 0x3C, 0x00 ],
  [ 0x66, 0x66, 0x66, 0x7E, 0x66, 0x66, 0x66, 0x00 ],
  [ 0x3C, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, 0x00 ],
  [ 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x6C, 0x38, 0x00 ],
  [ 0x66, 0x6C, 0x78, 0x70, 0x78, 0x6C, 0x66, 0x00 ],
  [ 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7E, 0x00 ],
  [ 0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63, 0x00 ],
  [ 0x66, 0x76, 0x7E, 0x7E, 0x6E, 0x66, 0x66, 0x00 ],
  [ 0x3C, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 ],
  [ 0x7C, 0x66, 0x66, 0x7C, 0x60, 0x60, 0x60, 0x00 ],
  [ 0x3C, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x0E, 0x00 ],
  [ 0x7C, 0x66, 0x66, 0x7C, 0x78, 0x6C, 0x66, 0x00 ],
  [ 0x3C, 0x66, 0x60, 0x3C, 0x06, 0x66, 0x3C, 0x00 ],
  [ 0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00 ],
  [ 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x00 ],
  [ 0x66, 0x66, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x00 ],
  [ 0x63, 0x63, 0x63, 0x6B, 0x7F, 0x77, 0x63, 0x00 ],
  [ 0x66, 0x66, 0x3C, 0x18, 0x3C, 0x66, 0x66, 0x00 ],
  [ 0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x18, 0x00 ],
  [ 0x7E, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x7E, 0x00 ],
  [ 0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x00 ],
  [ 0x0C, 0x12, 0x30, 0x7C, 0x30, 0x62, 0xFC, 0x00 ],
  [ 0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C, 0x00 ],
  [ 0x00, 0x18, 0x3C, 0x7E, 0x18, 0x18, 0x18, 0x18 ],
  [ 0x00, 0x10, 0x30, 0x7F, 0x7F, 0x30, 0x10, 0x00 ],
  [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ],
  [ 0x18, 0x18, 0x18, 0x18, 0x00, 0x00, 0x18, 0x00 ],
  [ 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00 ],
  [ 0x66, 0x66, 0xFF, 0x66, 0xFF, 0x66, 0x66, 0x00 ],
  [ 0x18, 0x3E, 0x60, 0x3C, 0x06, 0x7C, 0x18, 0x00 ],
  [ 0x62, 0x66, 0x0C, 0x18, 0x30, 0x66, 0x46, 0x00 ],
  [ 0x3C, 0x66, 0x3C, 0x38, 0x67, 0x66, 0x3F, 0x00 ],
  [ 0x06, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00 ],
  [ 0x0C, 0x18, 0x30, 0x30, 0x30, 0x18, 0x0C, 0x00 ],
  [ 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x18, 0x30, 0x00 ],
  [ 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00, 0x00 ],
  [ 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18, 0x00, 0x00 ],
  [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x30 ],
  [ 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00 ],
  [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00 ],
  [ 0x00, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x00 ],
  [ 0x3C, 0x66, 0x6E, 0x76, 0x66, 0x66, 0x3C, 0x00 ],
  [ 0x18, 0x18, 0x38, 0x18, 0x18, 0x18, 0x7E, 0x00 ],
  [ 0x3C, 0x66, 0x06, 0x0C, 0x30, 0x60, 0x7E, 0x00 ],
  [ 0x3C, 0x66, 0x06, 0x1C, 0x06, 0x66, 0x3C, 0x00 ],
  [ 0x06, 0x0E, 0x1E, 0x66, 0x7F, 0x06, 0x06, 0x00 ],
  [ 0x7E, 0x60, 0x7C, 0x06, 0x06, 0x66, 0x3C, 0x00 ],
  [ 0x3C, 0x66, 0x60, 0x7C, 0x66, 0x66, 0x3C, 0x00 ],
  [ 0x7E, 0x66, 0x0C, 0x18, 0x18, 0x18, 0x18, 0x00 ],
  [ 0x3C, 0x66, 0x66, 0x3C, 0x66, 0x66, 0x3C, 0x00 ],
  [ 0x3C, 0x66, 0x66, 0x3E, 0x06, 0x66, 0x3C, 0x00 ],
  [ 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00 ],
  [ 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x18, 0x30 ],
  [ 0x0E, 0x18, 0x30, 0x60, 0x30, 0x18, 0x0E, 0x00 ],
  [ 0x00, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00, 0x00 ],
  [ 0x70, 0x18, 0x0C, 0x06, 0x0C, 0x18, 0x70, 0x00 ],
  [ 0x3C, 0x66, 0x06, 0x0C, 0x18, 0x00, 0x18, 0x00 ]
];

const mapping = '@abcdefghijklmnopqrstuvwxyz[Â£]{} !"#$%&\'()*+,-./0123456789:;<=>?';

export function print(x, y, text) {
  for (let i = 0; i < text.length; i++) {
    drawCharacter(x + i * 7, y, text[i]);
  }
}

function drawCharacter(x, y, character) {
  let index = mapping.indexOf(character.toLowerCase());

  if (index === -1) {
    index = 63;
  }

  for (let row = 0; row < 8; row++) {
    for (let column = 0; column < 8; column++) {
      if ((systemFont[index][row] & (1 << 8 - column)) !== 0) {
        setPixel(x + column, y + row, 255, 255, 255);
      }
    }
  }
}
